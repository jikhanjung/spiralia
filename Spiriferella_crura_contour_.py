contour_list=[[[(0.118,0.327,-0.36269999999999997),(0.12,0.335,-0.36269999999999997),(0.128,0.342,-0.36269999999999997),(0.136,0.346,-0.36269999999999997),(0.144,0.348,-0.36269999999999997),(0.152,0.349,-0.36269999999999997),(0.16,0.348,-0.36269999999999997),(0.168,0.342,-0.36269999999999997),(0.172,0.334,-0.36269999999999997),(0.17,0.327,-0.36269999999999997),(0.163,0.322,-0.36269999999999997),(0.156,0.318,-0.36269999999999997),(0.149,0.317,-0.36269999999999997),(0.142,0.318,-0.36269999999999997),(0.135,0.32,-0.36269999999999997),(0.128,0.321,-0.36269999999999997)],
[(-0.245,0.308,-0.36269999999999997),(-0.245,0.315,-0.36269999999999997),(-0.238,0.322,-0.36269999999999997),(-0.231,0.326,-0.36269999999999997),(-0.224,0.33,-0.36269999999999997),(-0.217,0.333,-0.36269999999999997),(-0.21,0.335,-0.36269999999999997),(-0.203,0.336,-0.36269999999999997),(-0.196,0.327,-0.36269999999999997),(-0.197,0.319,-0.36269999999999997),(-0.201,0.311,-0.36269999999999997),(-0.206,0.303,-0.36269999999999997),(-0.213,0.295,-0.36269999999999997),(-0.221,0.292,-0.36269999999999997),(-0.229,0.294,-0.36269999999999997),(-0.237,0.3,-0.36269999999999997)]],
[[(-0.2,0.326,-0.32239999999999996),(-0.198,0.334,-0.32239999999999996),(-0.192,0.341,-0.32239999999999996),(-0.184,0.347,-0.32239999999999996),(-0.176,0.35,-0.32239999999999996),(-0.168,0.35,-0.32239999999999996),(-0.16,0.346,-0.32239999999999996),(-0.153,0.339,-0.32239999999999996),(-0.147,0.329,-0.32239999999999996),(-0.148,0.321,-0.32239999999999996),(-0.155,0.313,-0.32239999999999996),(-0.163,0.31,-0.32239999999999996),(-0.171,0.308,-0.32239999999999996),(-0.179,0.309,-0.32239999999999996),(-0.187,0.311,-0.32239999999999996),(-0.195,0.317,-0.32239999999999996)],
[(0.076,0.322,-0.32239999999999996),(0.076,0.329,-0.32239999999999996),(0.083,0.331,-0.32239999999999996),(0.09,0.329,-0.32239999999999996),(0.097,0.325,-0.32239999999999996),(0.104,0.321,-0.32239999999999996),(0.111,0.317,-0.32239999999999996),(0.118,0.312,-0.32239999999999996),(0.131,0.3,-0.32239999999999996),(0.129,0.292,-0.32239999999999996),(0.121,0.288,-0.32239999999999996),(0.113,0.285,-0.32239999999999996),(0.105,0.286,-0.32239999999999996),(0.097,0.291,-0.32239999999999996),(0.091,0.299,-0.32239999999999996),(0.084,0.307,-0.32239999999999996)]],
[[(-0.187,0.33,-0.28209999999999996),(-0.186,0.337,-0.28209999999999996),(-0.181,0.344,-0.28209999999999996),(-0.174,0.349,-0.28209999999999996),(-0.167,0.351,-0.28209999999999996),(-0.16,0.351,-0.28209999999999996),(-0.153,0.351,-0.28209999999999996),(-0.146,0.351,-0.28209999999999996),(-0.137,0.342,-0.28209999999999996),(-0.137,0.333,-0.28209999999999996),(-0.14,0.324,-0.28209999999999996),(-0.146,0.315,-0.28209999999999996),(-0.155,0.308,-0.28209999999999996),(-0.164,0.305,-0.28209999999999996),(-0.173,0.307,-0.28209999999999996),(-0.181,0.315,-0.28209999999999996)],
[(0.092,0.31,-0.28209999999999996),(0.094,0.318,-0.28209999999999996),(0.098,0.326,-0.28209999999999996),(0.105,0.332,-0.28209999999999996),(0.113,0.333,-0.28209999999999996),(0.121,0.333,-0.28209999999999996),(0.129,0.33,-0.28209999999999996),(0.137,0.326,-0.28209999999999996),(0.144,0.316,-0.28209999999999996),(0.142,0.306,-0.28209999999999996),(0.139,0.296,-0.28209999999999996),(0.133,0.286,-0.28209999999999996),(0.123,0.282,-0.28209999999999996),(0.113,0.285,-0.28209999999999996),(0.103,0.289,-0.28209999999999996),(0.096,0.299,-0.28209999999999996)]],
[[(-0.184,0.36,-0.2418),(-0.182,0.365,-0.2418),(-0.177,0.368,-0.2418),(-0.172,0.371,-0.2418),(-0.167,0.374,-0.2418),(-0.162,0.374,-0.2418),(-0.157,0.374,-0.2418),(-0.152,0.372,-0.2418),(-0.141,0.364,-0.2418),(-0.143,0.352,-0.2418),(-0.147,0.34,-0.2418),(-0.145,0.328,-0.2418),(-0.154,0.318,-0.2418),(-0.166,0.32,-0.2418),(-0.174,0.332,-0.2418),(-0.177,0.344,-0.2418)],
[(0.101,0.328,-0.2418),(0.102,0.335,-0.2418),(0.105,0.342,-0.2418),(0.112,0.349,-0.2418),(0.119,0.355,-0.2418),(0.126,0.36,-0.2418),(0.133,0.358,-0.2418),(0.135,0.351,-0.2418),(0.138,0.339,-0.2418),(0.138,0.331,-0.2418),(0.133,0.323,-0.2418),(0.128,0.316,-0.2418),(0.12,0.31,-0.2418),(0.112,0.308,-0.2418),(0.105,0.312,-0.2418),(0.104,0.32,-0.2418)]],
[[(0.12,0.384,-0.2015),(0.121,0.392,-0.2015),(0.122,0.4,-0.2015),(0.125,0.408,-0.2015),(0.129,0.416,-0.2015),(0.137,0.423,-0.2015),(0.145,0.43,-0.2015),(0.153,0.437,-0.2015),(0.166,0.434,-0.2015),(0.164,0.421,-0.2015),(0.162,0.408,-0.2015),(0.157,0.395,-0.2015),(0.152,0.382,-0.2015),(0.146,0.369,-0.2015),(0.136,0.357,-0.2015),(0.124,0.364,-0.2015)],
[(-0.212,0.373,-0.2015),(-0.21,0.379,-0.2015),(-0.204,0.382,-0.2015),(-0.198,0.382,-0.2015),(-0.192,0.381,-0.2015),(-0.186,0.377,-0.2015),(-0.183,0.371,-0.2015),(-0.179,0.365,-0.2015),(-0.172,0.355,-0.2015),(-0.173,0.345,-0.2015),(-0.178,0.335,-0.2015),(-0.181,0.326,-0.2015),(-0.191,0.333,-0.2015),(-0.197,0.343,-0.2015),(-0.203,0.353,-0.2015),(-0.208,0.363,-0.2015)]],
[[(0.078,0.415,-0.16119999999999998),(0.088,0.423,-0.16119999999999998),(0.102,0.426,-0.16119999999999998),(0.116,0.434,-0.16119999999999998),(0.13,0.445,-0.16119999999999998),(0.143,0.457,-0.16119999999999998),(0.157,0.46,-0.16119999999999998),(0.171,0.459,-0.16119999999999998),(0.188,0.451,-0.16119999999999998),(0.18,0.431,-0.16119999999999998),(0.168,0.421,-0.16119999999999998),(0.148,0.404,-0.16119999999999998),(0.138,0.411,-0.16119999999999998),(0.135,0.423,-0.16119999999999998),(0.118,0.424,-0.16119999999999998),(0.098,0.415,-0.16119999999999998)],
[(-0.24,0.389,-0.16119999999999998),(-0.24,0.397,-0.16119999999999998),(-0.237,0.405,-0.16119999999999998),(-0.23,0.41,-0.16119999999999998),(-0.222,0.409,-0.16119999999999998),(-0.216,0.401,-0.16119999999999998),(-0.21,0.393,-0.16119999999999998),(-0.203,0.385,-0.16119999999999998),(-0.197,0.374,-0.16119999999999998),(-0.199,0.366,-0.16119999999999998),(-0.201,0.358,-0.16119999999999998),(-0.206,0.351,-0.16119999999999998),(-0.214,0.354,-0.16119999999999998),(-0.221,0.361,-0.16119999999999998),(-0.227,0.369,-0.16119999999999998),(-0.233,0.377,-0.16119999999999998)]],
[[(-0.269,0.404,-0.1209),(-0.266,0.411,-0.1209),(-0.258,0.41,-0.1209),(-0.25,0.408,-0.1209),(-0.242,0.407,-0.1209),(-0.234,0.405,-0.1209),(-0.226,0.403,-0.1209),(-0.218,0.401,-0.1209),(-0.209,0.396,-0.1209),(-0.22,0.392,-0.1209),(-0.233,0.392,-0.1209),(-0.218,0.381,-0.1209),(-0.21,0.366,-0.1209),(-0.22,0.361,-0.1209),(-0.235,0.371,-0.1209),(-0.25,0.383,-0.1209)],
[(0.103,0.355,-0.1209),(0.117,0.373,-0.1209),(0.134,0.388,-0.1209),(0.152,0.404,-0.1209),(0.169,0.414,-0.1209),(0.187,0.43,-0.1209),(0.205,0.436,-0.1209),(0.223,0.441,-0.1209),(0.246,0.446,-0.1209),(0.235,0.426,-0.1209),(0.215,0.415,-0.1209),(0.195,0.407,-0.1209),(0.175,0.404,-0.1209),(0.164,0.385,-0.1209),(0.144,0.372,-0.1209),(0.124,0.36,-0.1209)]]]
centroid_list=[[(0.145,0.332,-0.36269999999999997),
(-0.22,0.314,-0.36269999999999997)],[(-0.174,0.328,-0.32239999999999996),
(0.102,0.306,-0.32239999999999996)],[(-0.162,0.33,-0.28209999999999996),
(0.118,0.308,-0.28209999999999996)],[(-0.161,0.347,-0.2418),
(0.119,0.333,-0.2418)],[(0.141,0.398,-0.2015),
(-0.191,0.357,-0.2015)],[(0.146,0.433,-0.16119999999999998),
(-0.219,0.381,-0.16119999999999998)],[(-0.237,0.388,-0.1209),
(0.176,0.405,-0.1209)]]

import bpy
import bmesh
import time 

mesh = bpy.data.meshes.new("mesh")  # add a new mesh
obj = bpy.data.objects.new("MyObject", mesh)  # add a new object using the mesh

scene = bpy.context.scene
scene.objects.link(obj)  # put the object into the scene (link)
scene.objects.active = obj  # set as the active object in the scene
obj.select = True  # select object

mesh = bpy.context.object.data
bm =  bmesh.new()

# contour 
all_contour_model = []
section_index = 0
for contours_in_a_section in contour_list:
    contour_model_in_a_section = []

    contour_index = 0
    for contour in contours_in_a_section:
        contour_model = { 'index':[section_index+1,contour_index],'v':[], 'e':[], 'bottom':True, 'top':True, 'above':[], 'below':[], 'coords':[], 'branching_processed': False, 'centroid':[], 'contour_length':-1 }
        contour_model['contour_length'] = len( contour )
        for v in contour:
            contour_model['v'].append( bm.verts.new(v) )
            contour_model['coords'].append( v )
        for i in range( len( contour_model['v'] ) ):
            contour_model['e'].append( bm.edges.new( ( contour_model['v'][i],contour_model['v'][(i+1)%len(contour_model['v'])] ) ) )
        contour_model['centroid'] = centroid_list[section_index][contour_index]
        contour_model_in_a_section.append( contour_model )
        contour_index += 1
    all_contour_model.append( contour_model_in_a_section )
    section_index += 1


# contour model connectivity processing
for contour_model_in_a_section in all_contour_model:
    contour1 = contour_model_in_a_section[0].copy()
    contour2 = contour_model_in_a_section[1].copy()

    if contour1['coords'][0] > contour2['coords'][0]:
        contour_model_in_a_section[0] = contour2
        contour_model_in_a_section[1] = contour1

# close top and bottom
for contour_model_in_a_section in all_contour_model:
    face1 = bm.faces.new( tuple( contour_model_in_a_section[0]['v'] ) )
    face1 = bm.faces.new( tuple( reversed( contour_model_in_a_section[1]['v'] ) ) )

# create faces
for i in range( len( all_contour_model ) - 1 ): 
  
    contours_in_below_section = all_contour_model[i]
    contours_in_above_section = all_contour_model[i+1]

    for j in range(2):
        contour1 = contours_in_below_section[j]
        contour2 = contours_in_above_section[j]
        print( contour1['coords'] )
        print( contour2['coords'] )
        for k in range( len( contour1['v'] ) ):
            idx1 = k 
            idx2 = ( idx1 + 1 ) % len( contour1['v'] )
            print( i, j, idx1, idx2 )
            face1 = bm.faces.new( ( contour1['v'][idx1], contour1['v'][idx2], contour2['v'][idx2], contour2['v'][idx1] ) )
        # make the bmesh the object's mesh
        bm.to_mesh(mesh)  
        #time.sleep(2)


bm.free()  # always do this when finished
